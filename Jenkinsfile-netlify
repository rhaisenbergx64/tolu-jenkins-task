pipeline {
    agent any

    environment {
        BUILD_VERSION = "1.0.$BUILD_ID"
        REACT_APP_BUILD_VERSION = "1.0.$BUILD_ID"
        CI_ENVIRONMENT_URL = 'https://jolly-panda-8722cd.netlify.app/'
    }

    stages {

        stage("Build ") {
            agent {
                docker {
                    image 'node:20-alpine'
                    reuseNode true
                    args '-u root'


                }
            }
            steps {
                sh '''
                    rm -rf .netlify playwright-report test-results
                    apk add --no-cache bash git python3 make g++
                    npm ci
                    BUILD_VERSION=$BUILD_VERSION npm run build
                    echo "Build completed with version: $BUILD_VERSION"
                    
                '''
            }
        }

        

        stage("Tests") {
            parallel {
                stage('Unit tests') {
                    agent {
                        docker {
                            image "node:${NODE_IMAGE_VERSION}"
                            reuseNode true
                        }
                    }
                    steps {
                        sh  '''
                            test -f build/index.html
                            npm test

                            '''
                }
                post {
                    always {
                        junit 'jest-results/junit.xml'

                        }
                    }
                }
            }
        }
        /*

                stage('E2E') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            npm install serve
                            node_modules/.bin/serve -s build &
                            sleep 10
                            npx playwright test --reporter=html
                        '''
                    }
                    post{
                        always{
                            junit 'jest-results/junit.xml'
                            publishHTML([
                                allowMissing: false, 
                                alwaysLinkToLastBuild: false, 
                                keepAll: false, 
                                reportDir: 'Playwright-report', 
                                reportFiles: 'index.html', 
                                reportName: 'Playwright HTML Report',
                                reportTitles: '', 
                                useWrapperFileDirectly: true
                             ])
                        }
                    }
                } 
                */

        stage('Deploy to Netlify') {
            agent {
                docker {
                    image "node:${NODE_IMAGE_VERSION}"
                    reuseNode true
                    args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                sh '''
                npm install netlify-cli
                echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                node_modules/.bin/netlify status
                node_modules/.bin/netlify build
                node_modules/.bin/netlify deploy --dir=build --prod
                '''
                }
            }
        }
    }